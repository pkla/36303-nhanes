model.2 <- gam(death ~ s(pm10median, k=5, fx=T) + s(o3median, k=5, fx=T) +
s(so2median, k=5, fx=T) + s(tmpd, k=5, fx=T), data=df)
par(mfrow=c(4,3), mar=c(4,3,4,3))
hist(resid(model.0), breaks=30, main="Model 0", xlab="Residuals")
for (feature in c("pm10median", "o3median", "so2median", "tmpd")) {
plot(df[,feature], resid(model.1), xlab=feature, ylab="Residuals", cex=0.5, main="Model 1")
}
qqnorm(resid(model.1), main="Model 1")
qqline(resid(model.1))
plot(fitted(model.1), resid(model.1), xlab="Fitted Values", ylab="Residuals", cex=0.5, main="Model 1")
for (feature in c("pm10median", "o3median", "so2median", "tmpd")) {
plot(df[,feature], resid(model.2), xlab=feature, ylab="Residuals",cex=0.5, main="Model 2")
}
qqnorm(resid(model.2), main="Model 2")
qqline(resid(model.2))
plot(fitted(model.2), resid(model.2), xlab="Fitted Values", cex=0.5, main="Model 2")
termplot(model.2)
termplot(model.2)
termplot(model.2)
termplot(model.2, data=df)
plot(model.2)
par(mfrow=c(4,1))
plot(model.2)
par(mfrow=c(4,1))
plot(model.2)
par(mfrow=c(4,1), mar=c(3,2,3,2))
plot(model.2)
nrow(df)
anova(model.1, model.2)
summary(anova(model.1, model.2))
anova(model.1, model.2)
model.1
model.0 <- lm(death ~ 1, data=df)
model.1 <- lm(death ~ pm10median + o3median + so2median + tmpd, data=df)
model.2 <- gam(death ~ s(pm10median, k=5, fx=T) + s(o3median, k=5, fx=T) +
s(so2median, k=5, fx=T) + s(tmpd, k=5, fx=T), data=df)
par(mfrow=c(5,3), mar=c(4,3,4,3))
hist(resid(model.0), breaks=30, main="Model 0", xlab="Residuals")
for (feature in c("pm10median", "o3median", "so2median", "tmpd")) {
plot(df[,feature], resid(model.1), xlab=feature, ylab="Residuals", cex=0.5, main="Model 1")
}
qqnorm(resid(model.1), main="Model 1")
qqline(resid(model.1))
plot(fitted(model.1), resid(model.1), xlab="Fitted Values", ylab="Residuals", cex=0.5, main="Model 1")
for (feature in c("pm10median", "o3median", "so2median", "tmpd")) {
plot(df[,feature], resid(model.2), xlab=feature, ylab="Residuals",cex=0.5, main="Model 2")
}
plot(fitted(model.2), resid(model.2), xlab="Fitted Values", cex=0.5, main="Model 2")
qqnorm(resid(model.2), main="Model 2")
qqline(resid(model.2))
head(df)
avg.temp <- 65
B <- 10
old.avg.data <- data.frame(so3median=c(-1), pm10median=c(-0.5), o3median=c(-2.5), tmpd=c(65))
new.avg.data <- data.frame(so3median=c(-0.64), pm10median=c(-0.15), o3median=c(-2.18), tmpd=c(65))
old.avg.preds <- vector(mode="numeric", length=B)
new.avg.preds <- vector(mode="numeric", length=B)
for (b in 1:B) {
samp <- sample(1:nrow(df), nrow(df), replace=T)
df.b <- df[samp,]
model.2.b <- gam(death ~ s(pm10median, k=5, fx=T) + s(o3median, k=5, fx=T) +
s(so2median, k=5, fx=T) + s(tmpd, k=5, fx=T), data=df.b)
old.avg.preds[[b]] <- predict(model.2.b, newdata=old.avg.data)
new.avg.preds[[b]] <- predict(model.2.b, newdata=new.avg.data)
}
avg.temp <- 65
B <- 10
old.avg.data <- data.frame(so3median=c(-1), pm10median=c(-0.5), o3median=c(-2.5), tmpd=c(65))
new.avg.data <- data.frame(so3median=c(-0.64), pm10median=c(-0.15), o3median=c(-2.18), tmpd=c(65))
old.avg.preds <- vector(mode="numeric", length=B)
new.avg.preds <- vector(mode="numeric", length=B)
for (b in 1:B) {
samp <- sample(1:nrow(df), nrow(df), replace=T)
df.b <- df[samp,]
model.2.b <- gam(death ~ s(pm10median, k=5, fx=T) + s(o3median, k=5, fx=T) +
s(so2median, k=5, fx=T) + s(tmpd, k=5, fx=T), data=df.b)
old.avg.preds[[b]] <- predict(model.2.b, newdata=old.avg.data)
new.avg.preds[[b]] <- predict(model.2.b, newdata=new.avg.data)
}
head(df)
avg.temp <- 65
B <- 10
old.avg.data <- data.frame(so2median=c(-1   ), pm10median=c(-0.5 ), o3median=c(-2.5 ), tmpd=c(65))
new.avg.data <- data.frame(so2median=c(-0.64), pm10median=c(-0.15), o3median=c(-2.18), tmpd=c(65))
old.avg.preds <- vector(mode="numeric", length=B)
new.avg.preds <- vector(mode="numeric", length=B)
for (b in 1:B) {
samp <- sample(1:nrow(df), nrow(df), replace=T)
df.b <- df[samp,]
model.2.b <- gam(death ~ s(pm10median, k=5, fx=T) + s(o3median, k=5, fx=T) +
s(so2median, k=5, fx=T) + s(tmpd, k=5, fx=T), data=df.b)
old.avg.preds[[b]] <- predict(model.2.b, newdata=old.avg.data)
new.avg.preds[[b]] <- predict(model.2.b, newdata=new.avg.data)
}
avg.temp <- 65
B <- 10
old.avg.data <- data.frame(so2median=c(-1   ), pm10median=c(-0.5 ), o3median=c(-2.5 ), tmpd=c(65))
new.avg.data <- data.frame(so2median=c(-0.64), pm10median=c(-0.15), o3median=c(-2.18), tmpd=c(65))
old.avg.preds <- vector(mode="numeric", length=B)
new.avg.preds <- vector(mode="numeric", length=B)
for (b in 1:B) {
samp <- sample(1:nrow(df), nrow(df), replace=T)
df.b <- df[samp,]
model.2.b <- gam(death ~ s(pm10median, k=5, fx=T) + s(o3median, k=5, fx=T) +
s(so2median, k=5, fx=T) + s(tmpd, k=5, fx=T), data=df.b)
old.avg.preds[[b]] <- predict(model.2.b, newdata=old.avg.data)
new.avg.preds[[b]] <- predict(model.2.b, newdata=new.avg.data)
}
diff.avg.preds <- old.avg.preds - new.avg.preds
diff.avg.preds
pply(diff.avg.preds, 1, quantile, prob = c(0.05/2, 0.95/2))
apply(diff.avg.preds, 1, quantile, prob = c(0.05/2, 0.95/2))
sapply(diff.avg.preds, quantile, prob = c(0.05/2, 0.95/2))
sapply(diff.avg.preds, quantile, prob = c(0.05/2, 0.95/2))
diff.avg.preds
quantile(diff.avg.preds, prob = c(0.05/2, 0.95/2))
quantile(diff.avg.preds, prob = c(0.05/2, (1-0.95)/2))
quantile(diff.avg.preds, prob = c(0.05/2, (1-0.05)/2))
quantile(diff.avg.preds, prob = c(0.05/2, 1-0.05/2))
c(2*mean.diff.preds - quantiles["2.5%"], 2*mean.diff.preds - quantiles["97.5%"])
mean.diff.preds <- mean(diff.avg.preds)
c(2*mean.diff.preds - quantiles["2.5%"], 2*mean.diff.preds - quantiles["97.5%"])
quantiles <- quantile(diff.avg.preds, prob = c(0.05/2, 1-0.05/2))
c(2*mean.diff.preds - quantiles["2.5%"], 2*mean.diff.preds - quantiles["97.5%"])
c(2*mean.diff.preds - quantiles["97.5%"], 2*mean.diff.preds - quantiles["2.5%"])
avg.temp <- 65
B <- 1000
old.avg.data <- data.frame(so2median=c(-1   ), pm10median=c(-0.5 ), o3median=c(-2.5 ), tmpd=c(65))
new.avg.data <- data.frame(so2median=c(-0.64), pm10median=c(-0.15), o3median=c(-2.18), tmpd=c(65))
old.avg.preds <- vector(mode="numeric", length=B)
new.avg.preds <- vector(mode="numeric", length=B)
for (b in 1:B) {
samp <- sample(1:nrow(df), nrow(df), replace=T)
df.b <- df[samp,]
model.2.b <- gam(death ~ s(pm10median, k=5, fx=T) + s(o3median, k=5, fx=T) +
s(so2median, k=5, fx=T) + s(tmpd, k=5, fx=T), data=df.b)
old.avg.preds[[b]] <- predict(model.2.b, newdata=old.avg.data)
new.avg.preds[[b]] <- predict(model.2.b, newdata=new.avg.data)
}
model.3 <- gam(death ~ s(pm10median, k=10 + 1) + s(o3median, k=10 + 1) +
s(so2median, k=10 + 1) + s(tmpd, k=10 + 1), data=df.b)
print(summary(model.3))
par(mfrow=c(4,1))
plot(model.3)
model.3 <- gam(death ~ s(pm10median, k=10 + 1) + s(o3median, k=10 + 1) +
s(so2median, k=10 + 1) + s(tmpd, k=10 + 1), data=df.b)
print(summary(model.3))
par(mfrow=c(4,1))
plot(model.3)
model.3 <- gam(death ~ s(pm10median, k=10 + 1) + s(o3median, k=10 + 1) +
s(so2median, k=10 + 1) + s(tmpd, k=10 + 1), data=df.b)
print(summary(model.3))
par(mfrow=c(4,1), mar=c(4,2,4,2)))
model.3 <- gam(death ~ s(pm10median, k=10 + 1) + s(o3median, k=10 + 1) +
s(so2median, k=10 + 1) + s(tmpd, k=10 + 1), data=df.b)
print(summary(model.3))
par(mfrow=c(4,1), mar=c(4,2,4,2))
plot(model.3)
K <- 10
folds <- sample(rep(1:K, length.out=nrow(df)), nrow(df), replace=F)
K <- 10
folds <- sample(rep(1:K, length.out=nrow(df)), nrow(df), replace=F)
folds[1:10]
model.3 <- gam(death ~ s(pm10median, k=10 + 1) + s(o3median, k=10 + 1) +
s(so2median, k=10 + 1) + s(tmpd, k=10 + 1), data=df)
print(summary(model.3))
K <- 10
folds <- sample(rep(1:K, length.out=nrow(df)), nrow(df), replace=F)
rmse.cv <- vector("numeric", length=K)
for (k in 1:K) {
train.df <- df[folds != k,]
test.df <- df[folds == k,]
model.3.k <- gam(death ~ s(pm10median, k=10 + 1) + s(o3median, k=10 + 1) +
s(so2median, k=10 + 1) + s(tmpd, k=10 + 1), data=train.df)
model.3.preds.k <- predict(model.3.k, newdata=test.df)
rmse.cv[[k]] <- sqrt(mean((model.3.preds.k - test)^2))
}
K <- 10
folds <- sample(rep(1:K, length.out=nrow(df)), nrow(df), replace=F)
rmse.cv <- vector("numeric", length=K)
for (k in 1:K) {
train.df <- df[folds != k,]
test.df <- df[folds == k,]
model.3.k <- gam(death ~ s(pm10median, k=10 + 1) + s(o3median, k=10 + 1) +
s(so2median, k=10 + 1) + s(tmpd, k=10 + 1), data=train.df)
model.3.preds.k <- predict(model.3.k, newdata=test.df)
rmse.cv[[k]] <- sqrt(mean((model.3.preds.k - test.df$deaths)^2))
}
avg.deaths <- mean(df$death)
avg.rmse <- mean(rmse.cv)
avg.rmse
rmse.cv
model.3.preds.k
K <- 10
folds <- sample(rep(1:K, length.out=nrow(df)), nrow(df), replace=F)
rmse.cv <- vector("numeric", length=K)
for (k in 1:K) {
train.df <- df[folds != k,]
test.df <- df[folds == k,]
model.3.k <- gam(death ~ s(pm10median, k=10 + 1) + s(o3median, k=10 + 1) +
s(so2median, k=10 + 1) + s(tmpd, k=10 + 1), data=train.df)
model.3.preds.k <- predict(model.3.k, newdata=test.df)
rmse.cv[[k]] <- sqrt(mean((model.3.preds.k - test.df$death)^2))
}
avg.deaths <- mean(df$death)
avg.rmse <- mean(rmse.cv)
avg.rmse
avg.deaths
avg.rmse
qqnorm(resid(model.1), main="Model 1")
qqline(resid(model.1))
K <- 10
folds <- sample(rep(1:K, length.out=nrow(df)), nrow(df), replace=F)
rmse.cv <- vector("numeric", length=K)
for (k in 1:K) {
train.df <- df[folds != k,]
test.df <- df[folds == k,]
model.3.k <- gam(death ~ s(pm10median, k=10 + 1) + s(o3median, k=10 + 1) +
s(so2median, k=10 + 1) + s(tmpd, k=10 + 1), data=train.df)
model.3.preds.k <- predict(model.3.k, newdata=test.df)
rmse.cv[[k]] <- sqrt(mean((model.3.preds.k - test.df$death)^2))
}
avg.deaths <- mean(df$death)
avg.rmse <- mean(rmse.cv)
avg.rmse
K <- 10
folds <- sample(rep(1:K, length.out=nrow(df)), nrow(df), replace=F)
rmse.cv <- vector("numeric", length=K)
k.fold.cv <- function(k) {
train.df <- df[folds != k,]
test.df <- df[folds == k,]
model.3.k <- gam(death ~ s(pm10median, k=10 + 1) + s(o3median, k=10 + 1) +
s(so2median, k=10 + 1) + s(tmpd, k=10 + 1), data=train.df)
model.3.preds.k <- predict(model.3.k, newdata=test.df)
rmse.cv[[k]] <- sqrt(mean((model.3.preds.k - test.df$death)^2))
}
rmse.cv <- lapply(1:K, k.fold.cv)
avg.deaths <- mean(df$death)
avg.rmse <- mean(rmse.cv)
avg.rmse
K <- 10
folds <- sample(rep(1:K, length.out=nrow(df)), nrow(df), replace=F)
k.fold.cv <- function(k) {
train.df <- df[folds != k,]
test.df <- df[folds == k,]
model.3.k <- gam(death ~ s(pm10median, k=10 + 1) + s(o3median, k=10 + 1) +
s(so2median, k=10 + 1) + s(tmpd, k=10 + 1), data=train.df)
model.3.preds.k <- predict(model.3.k, newdata=test.df)
return(sqrt(mean((model.3.preds.k - test.df$death)^2)))
}
rmse.cv <- lapply(1:K, k.fold.cv)
avg.deaths <- mean(df$death)
avg.rmse <- mean(rmse.cv)
avg.rmse
rmse.cv
rmse.cv
mean(rmse.cv)
K <- 10
folds <- sample(rep(1:K, length.out=nrow(df)), nrow(df), replace=F)
k.fold.cv <- function(k) {
train.df <- df[folds != k,]
test.df <- df[folds == k,]
model.3.k <- gam(death ~ s(pm10median, k=10 + 1) + s(o3median, k=10 + 1) +
s(so2median, k=10 + 1) + s(tmpd, k=10 + 1), data=train.df)
model.3.preds.k <- predict(model.3.k, newdata=test.df)
return(sqrt(mean((model.3.preds.k - test.df$death)^2)))
}
rmse.cv <- sapply(1:K, k.fold.cv)
avg.deaths <- mean(df$death)
avg.rmse <- mean(rmse.cv)
avg.rmse
anova(model.1, model.2, test="F")
qqnorm(resid(model.1), main="Model 1", cex=0.5)
qqline(resid(model.1))
B <- 100
alpha <- 0.05
old.avg.data <- data.frame(so2median=c(-1   ), pm10median=c(-0.5 ), o3median=c(-2.5 ), tmpd=c(65))
new.avg.data <- data.frame(so2median=c(-0.64), pm10median=c(-0.15), o3median=c(-2.18), tmpd=c(65))
theta.hat.star <- vector(mode="numeric", length=B)
for (b in 1:B) {
samp <- sample(1:nrow(df), nrow(df), replace=T)
df.b <- df[samp,]
model.2.b <- gam(death ~ s(pm10median, k=5, fx=T) + s(o3median, k=5, fx=T) +
s(so2median, k=5, fx=T) + s(tmpd, k=5, fx=T), data=df.b)
old.preds.b <- predict(model.2.b, newdata=old.avg.data)
new.preds.b <- predict(model.2.b, newdata=new.avg.data)
theta.hat.star[[b]] <- old.preds.b - new.preds.b
}
theta.hat <- predict(model.2, newdata=old.avg.data) - predict(model.2, newdata=new.avg.data)
quantiles <- quantile(theta.hat.star, prob = c(alpha/2, 1-alpha/2))
confint.boot <- c(2*theta.hat - quantiles[[2]], 2*theta.hat - quantiles[[1]])
confint.boot
length(resid(model2))
length(resid(model.2))
B <- 1000
alpha <- 0.05
old.avg.data <- data.frame(so2median=c(-1   ), pm10median=c(-0.5 ), o3median=c(-2.5 ), tmpd=c(65))
new.avg.data <- data.frame(so2median=c(-0.64), pm10median=c(-0.15), o3median=c(-2.18), tmpd=c(65))
theta.hat.star <- vector(mode="numeric", length=B)
sd.epsilon <- sd(resid(model.2))
for (b in 1:B) {
samp <- sample(1:nrow(df), nrow(df), replace=T)
df.b <- df[samp,]
old.preds.b <- predict(model.2.b, newdata=old.avg.data) + rnorm(1, sd=sd.epsilon)
new.preds.b <- predict(model.2.b, newdata=new.avg.data) + rnorm(1, sd=sd.epsilon)
theta.hat.star[[b]] <- old.preds.b - new.preds.b
}
B <- 1000
alpha <- 0.05
old.avg.data <- data.frame(so2median=c(-1   ), pm10median=c(-0.5 ), o3median=c(-2.5 ), tmpd=c(65))
new.avg.data <- data.frame(so2median=c(-0.64), pm10median=c(-0.15), o3median=c(-2.18), tmpd=c(65))
theta.hat.star <- vector(mode="numeric", length=B)
sd.epsilon <- sd(resid(model.2))
for (b in 1:B) {
old.preds.b <- predict(model.2.b, newdata=old.avg.data) + rnorm(1, sd=sd.epsilon)
new.preds.b <- predict(model.2.b, newdata=new.avg.data) + rnorm(1, sd=sd.epsilon)
theta.hat.star[[b]] <- old.preds.b - new.preds.b
}
theta.hat <- predict(model.2, newdata=old.avg.data) - predict(model.2, newdata=new.avg.data)
quantiles <- quantile(theta.hat.star, prob = c(alpha/2, 1-alpha/2))
confint.boot <- c(2*theta.hat - quantiles[[2]], 2*theta.hat - quantiles[[1]])
confint.boot
sd(resid(model.2))
mean(resid(model.2))
theta.hat <- predict(model.2, newdata=old.avg.data) - predict(model.2, newdata=new.avg.data)
quantiles <- quantile(theta.hat.star, prob = c(alpha/2, 1-alpha/2))
confint.boot <- c(2*theta.hat - quantiles[[2]], 2*theta.hat - quantiles[[1]])
confint.boot
B <- 1000
alpha <- 0.05
old.avg.data <- data.frame(so2median=c(-1   ), pm10median=c(-0.5 ), o3median=c(-2.5 ), tmpd=c(65))
new.avg.data <- data.frame(so2median=c(-0.64), pm10median=c(-0.15), o3median=c(-2.18), tmpd=c(65))
theta.hat.star <- vector(mode="numeric", length=B)
sd.epsilon <- sd(resid(model.2))
for (b in 1:B) {
old.preds.b <- predict(model.2, newdata=old.avg.data) + rnorm(1, sd=sd.epsilon)
new.preds.b <- predict(model.2, newdata=new.avg.data) + rnorm(1, sd=sd.epsilon)
theta.hat.star[[b]] <- old.preds.b - new.preds.b
}
theta.hat <- predict(model.2, newdata=old.avg.data) - predict(model.2, newdata=new.avg.data)
quantiles <- quantile(theta.hat.star, prob = c(alpha/2, 1-alpha/2))
confint.boot <- c(2*theta.hat - quantiles[[2]], 2*theta.hat - quantiles[[1]])
confint.boot
theta.hat
quantiles
theta.hat.star
rnorm(1, sd=sd.epsilon)
rnorm(1, sd=sd.epsilon)
rnorm(1, sd=sd.epsilon)
rnorm(1, sd=sd.epsilon)
rnorm(1, sd=sd.epsilon)
rnorm(1, sd=sd.epsilon)
rnorm(1, sd=sd.epsilon)
rnorm(1, sd=sd.epsilon)
rnorm(1, sd=sd.epsilon)
rnorm(1, sd=sd.epsilon)
rnorm(1, sd=sd.epsilon)
rnorm(1, sd=sd.epsilon)
rnorm(1, sd=sd.epsilon)
rnorm(1, sd=sd.epsilon)
rnorm(1, sd=sd.epsilon)
rnorm(1, sd=sd.epsilon)
?rnorm
B <- 1000
alpha <- 0.05
old.avg.data <- data.frame(so2median=c(-1   ), pm10median=c(-0.5 ), o3median=c(-2.5 ), tmpd=c(65))
new.avg.data <- data.frame(so2median=c(-0.64), pm10median=c(-0.15), o3median=c(-2.18), tmpd=c(65))
theta.hat.star <- vector(mode="numeric", length=B)
sd.epsilon <- sd(resid(model.2))
old.preds.b <- predict(model.2, newdata=old.avg.data) + rnorm(B, sd=sd.epsilon)
new.preds.b <- predict(model.2, newdata=new.avg.data) + rnorm(B, sd=sd.epsilon)
theta.hat.star <- old.preds.b - new.preds.b
B <- 10000
alpha <- 0.05
old.avg.data <- data.frame(so2median=c(-1   ), pm10median=c(-0.5 ), o3median=c(-2.5 ), tmpd=c(65))
new.avg.data <- data.frame(so2median=c(-0.64), pm10median=c(-0.15), o3median=c(-2.18), tmpd=c(65))
sd.epsilon <- sd(resid(model.2))
old.preds.b <- predict(model.2, newdata=old.avg.data) + rnorm(B, sd=sd.epsilon)
new.preds.b <- predict(model.2, newdata=new.avg.data) + rnorm(B, sd=sd.epsilon)
theta.hat.star <- old.preds.b - new.preds.b
theta.hat <- predict(model.2, newdata=old.avg.data) - predict(model.2, newdata=new.avg.data)
quantiles <- quantile(theta.hat.star, prob = c(alpha/2, 1-alpha/2))
confint.boot <- c(2*theta.hat - quantiles[[2]], 2*theta.hat - quantiles[[1]])
confint.boot
theta.hat.star[1:10]
mean(old.preds.b)
mean(new.preds.b)
predict(model.2, newdata=old.avg.data)
predict(model.2, newdata=new.avg.data)
model.0 <- lm(death ~ 1, data=df)
model.1 <- lm(death ~ pm10median + o3median + so2median + tmpd, data=df)
model.2 <- gam(death ~ s(pm10median, k=5, fx=T) + s(o3median, k=5, fx=T) +
s(so2median, k=5, fx=T) + s(tmpd, k=5, fx=T), data=df)
par(mfrow=c(5,3), mar=c(4,2,3,2))
hist(resid(model.0), breaks=30, main="Model 0", xlab="Residuals")
for (feature in c("pm10median", "o3median", "so2median", "tmpd")) {
plot(df[,feature], resid(model.1), xlab=feature, ylab="Residuals", cex=0.25, main="Model 1")
}
qqnorm(resid(model.1), main="Model 1", cex=0.25)
qqline(resid(model.1))
plot(fitted(model.1), resid(model.1), xlab="Fitted Values", ylab="Residuals", cex=0.5, main="Model 1")
for (feature in c("pm10median", "o3median", "so2median", "tmpd")) {
plot(df[,feature], resid(model.2), xlab=feature, ylab="Residuals",cex=0.25, main="Model 2")
}
plot(fitted(model.2), resid(model.2), xlab="Fitted Values", cex=0.25, main="Model 2")
qqnorm(resid(model.2), main="Model 2", cex=0.25)
qqline(resid(model.2))
B <- 10000
alpha <- 0.05
old.avg.data <- data.frame(so2median=c(-1   ), pm10median=c(-0.5 ), o3median=c(-2.5 ), tmpd=c(65))
new.avg.data <- data.frame(so2median=c(-0.64), pm10median=c(-0.15), o3median=c(-2.18), tmpd=c(65))
sd.epsilon <- sd(resid(model.2))
old.preds.b <- predict(model.2, newdata=old.avg.data) + rnorm(B, sd=sd.epsilon)
new.preds.b <- predict(model.2, newdata=new.avg.data) + rnorm(B, sd=sd.epsilon)
theta.hat.star <- old.preds.b - new.preds.b
predict(model.2, newdata=old.avg.data)
predict(model.2, newdata=new.avg.data)
B <- 10000
alpha <- 0.05
old.avg.data <- data.frame(so2median=c(-0.64), pm10median=c(-0.15), o3median=c(-2.18), tmpd=c(65))
new.avg.data <- data.frame(so2median=c(-1   ), pm10median=c(-0.5 ), o3median=c(-2.5 ), tmpd=c(65))
sd.epsilon <- sd(resid(model.2))
old.preds.b <- predict(model.2, newdata=old.avg.data) + rnorm(B, sd=sd.epsilon)
new.preds.b <- predict(model.2, newdata=new.avg.data) + rnorm(B, sd=sd.epsilon)
theta.hat.star <- old.preds.b - new.preds.b
theta.hat <- predict(model.2, newdata=old.avg.data) - predict(model.2, newdata=new.avg.data)
quantiles <- quantile(theta.hat.star, prob = c(alpha/2, 1-alpha/2))
confint.boot <- c(2*theta.hat - quantiles[[2]], 2*theta.hat - quantiles[[1]])
confint.boot
B <- 10000
alpha <- 0.05
old.avg.data <- data.frame(so2median=c(-0.64), pm10median=c(-0.15), o3median=c(-2.18), tmpd=c(65))
new.avg.data <- data.frame(so2median=c(-1   ), pm10median=c(-0.5 ), o3median=c(-2.5 ), tmpd=c(65))
sd.epsilon <- sd(resid(model.2))
old.preds.b <- predict(model.2, newdata=old.avg.data) + rnorm(B, sd=sd.epsilon)
new.preds.b <- predict(model.2, newdata=new.avg.data) + rnorm(B, sd=sd.epsilon)
theta.hat.star <- old.preds.b - new.preds.b
B <- 10
alpha <- 0.05
old.avg.data <- data.frame(so2median=c(-1   ), pm10median=c(-0.5 ), o3median=c(-2.5 ), tmpd=c(65))
new.avg.data <- data.frame(so2median=c(-0.64), pm10median=c(-0.15), o3median=c(-2.18), tmpd=c(65))
sd.epsilon <- sd(resid(model.2))
model.2.preds <- predict(model.2, newdata=df)
theta.hat.star <- vector(mode="numeric", length=B)
for (b in 1:B) {
para.bootstrap.df <- model.2.preds + rnorm(nrow(df), sd=sd.epsilon)
model.2.b <- gam(death ~ s(pm10median, k=5, fx=T) + s(o3median, k=5, fx=T) +
s(so2median, k=5, fx=T) + s(tmpd, k=5, fx=T), data=para.bootstrap.df)
old.preds.b <- predict(model.2.b, newdata=old.avg.data)
new.preds.b <- predict(model.2.b, newdata=new.avg.data)
theta.hat.star[[b]] <- old.preds.b - new.preds.b
}
B <- 10
alpha <- 0.05
old.avg.data <- data.frame(so2median=c(-1   ), pm10median=c(-0.5 ), o3median=c(-2.5 ), tmpd=c(65))
new.avg.data <- data.frame(so2median=c(-0.64), pm10median=c(-0.15), o3median=c(-2.18), tmpd=c(65))
sd.epsilon <- sd(resid(model.2))
model.2.preds <- predict(model.2, newdata=df)
theta.hat.star <- vector(mode="numeric", length=B)
for (b in 1:B) {
df$death.bootstrap <- model.2.preds + rnorm(nrow(df), sd=sd.epsilon)
model.2.b <- gam(death.bootstrap ~ s(pm10median, k=5, fx=T) + s(o3median, k=5, fx=T) +
s(so2median, k=5, fx=T) + s(tmpd, k=5, fx=T), data=para.bootstrap.df)
old.preds.b <- predict(model.2.b, newdata=old.avg.data)
new.preds.b <- predict(model.2.b, newdata=new.avg.data)
theta.hat.star[[b]] <- old.preds.b - new.preds.b
}
B <- 10
alpha <- 0.05
old.avg.data <- data.frame(so2median=c(-1   ), pm10median=c(-0.5 ), o3median=c(-2.5 ), tmpd=c(65))
new.avg.data <- data.frame(so2median=c(-0.64), pm10median=c(-0.15), o3median=c(-2.18), tmpd=c(65))
sd.epsilon <- sd(resid(model.2))
model.2.preds <- predict(model.2, newdata=df)
theta.hat.star <- vector(mode="numeric", length=B)
for (b in 1:B) {
df$death.bootstrap <- model.2.preds + rnorm(nrow(df), sd=sd.epsilon)
model.2.b <- gam(death.bootstrap ~ s(pm10median, k=5, fx=T) + s(o3median, k=5, fx=T) +
s(so2median, k=5, fx=T) + s(tmpd, k=5, fx=T), data=df)
old.preds.b <- predict(model.2.b, newdata=old.avg.data)
new.preds.b <- predict(model.2.b, newdata=new.avg.data)
theta.hat.star[[b]] <- old.preds.b - new.preds.b
}
theta.hat <- predict(model.2, newdata=old.avg.data) - predict(model.2, newdata=new.avg.data)
quantiles <- quantile(theta.hat.star, prob = c(alpha/2, 1-alpha/2))
confint.boot <- c(2*theta.hat - quantiles[[2]], 2*theta.hat - quantiles[[1]])
confint.boot
theta.hat
B <- 100
alpha <- 0.05
old.avg.data <- data.frame(so2median=c(-1   ), pm10median=c(-0.5 ), o3median=c(-2.5 ), tmpd=c(65))
new.avg.data <- data.frame(so2median=c(-0.64), pm10median=c(-0.15), o3median=c(-2.18), tmpd=c(65))
sd.epsilon <- sd(resid(model.2))
model.2.preds <- predict(model.2, newdata=df)
theta.hat.star <- vector(mode="numeric", length=B)
for (b in 1:B) {
df$death.bootstrap <- model.2.preds + rnorm(nrow(df), sd=sd.epsilon)
model.2.b <- gam(death.bootstrap ~ s(pm10median, k=5, fx=T) + s(o3median, k=5, fx=T) +
s(so2median, k=5, fx=T) + s(tmpd, k=5, fx=T), data=df)
old.preds.b <- predict(model.2.b, newdata=old.avg.data)
new.preds.b <- predict(model.2.b, newdata=new.avg.data)
theta.hat.star[[b]] <- old.preds.b - new.preds.b
}
theta.hat <- predict(model.2, newdata=old.avg.data) - predict(model.2, newdata=new.avg.data)
quantiles <- quantile(theta.hat.star, prob = c(alpha/2, 1-alpha/2))
confint.boot <- c(2*theta.hat - quantiles[[2]], 2*theta.hat - quantiles[[1]])
confint.boot
df$death.bootstrap
df$death.bootstrap <- model.2.preds + rnorm(nrow(df), sd=sd.epsilon)
df$death.bootstrap
head(df$death.bootstrap)
df$death.bootstrap <- model.2.preds + rnorm(nrow(df), sd=sd.epsilon)
head(df$death.bootstrap)
